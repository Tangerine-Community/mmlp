// Generated by CoffeeScript 1.7.1
Mmlp.bootSequence = {
  cache: function(done) {
    Mmlp.cache = {
      $window: $(window),
      $nav: $('#menu'),
      $navSpacer: $('#menu-spacer')
    };
    Mmlp.cache.elTop = Mmlp.cache.$nav.offset().top;
    return done();
  },
  loadLesson: function(done) {
    return Mmlp.$db.view("mmlp/lesson", {
      success: (function(_this) {
        return function(response) {
          var day, grade, row, subject, week, _i, _len, _ref;
          Mmlp.available = [];
          _ref = response.rows;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            row = _ref[_i];
            subject = Mmlp["enum"].subjects[row.key[0]];
            grade = row.key[1];
            week = row.key[2];
            day = row.key[3];
            Mmlp.available.push([subject, grade, week, day]);
          }
          if (window.location.hash === "") {
            window.location.hash = "lesson/" + Mmlp.available[0][0] + "/" + Mmlp.available[0][1] + "/" + Mmlp.available[0][2] + "/" + Mmlp.available[0][3];
          }
          return done();
        };
      })(this)
    });
  },
  initMenu: function(done) {
    Mmlp.MenuView = new LessonMenuView({
      available: Mmlp.available
    });
    Mmlp.MenuView.setElement($("#menu")).render();
    return done();
  },
  initDisplay: function(done) {
    Mmlp.LessonView = new LessonView;
    Mmlp.LessonView.setElement($("#content")).render();
    return done();
  },
  freezeNav: function(done) {
    Mmlp.cache.$window.scroll(function() {
      var shouldFreeze;
      shouldFreeze = Mmlp.cache.$window.scrollTop() > Mmlp.cache.elTop;
      Mmlp.cache.$nav.toggleClass('sticky-on', shouldFreeze);
      Mmlp.cache.$navSpacer.height(Mmlp.cache.$nav.height());
      return Mmlp.cache.$navSpacer.toggle(shouldFreeze);
    });
    return done();
  },
  initRouter: function(done) {
    Mmlp.router = new MmlpRouter();
    return done();
  },
  startBackbone: function(done) {
    return Backbone.history.start();
  }
};

$(function() {
  var boot, runSequence;
  boot = [Mmlp.bootSequence.cache, Mmlp.bootSequence.loadLesson, Mmlp.bootSequence.initMenu, Mmlp.bootSequence.initDisplay, Mmlp.bootSequence.freezeNav, Mmlp.bootSequence.initRouter, Mmlp.bootSequence.startBackbone];
  runSequence = function() {
    var nextFunction;
    if (boot.length === 0) {

    } else {
      nextFunction = boot.shift();
      console.log(nextFunction);
      return nextFunction(runSequence);
    }
  };
  return runSequence();
});
